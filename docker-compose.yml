services:
  gateway:
    image: ghcr.io/path-drc/path-drc-emr-gateway:${TAG:-latest}
    restart: "unless-stopped"
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"

  frontend:
    image: ghcr.io/path-drc/path-drc-emr-frontend:${TAG:-latest}
    restart: "unless-stopped"
    environment:
      SPA_PATH: /openmrs/spa
      API_URL: /openmrs
      SPA_CONFIG_URLS: /openmrs/spa/openmrs-config.json
      SPA_DEFAULT_LOCALE: fr
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      timeout: 5s
    depends_on:
      - backend

  backend:
    image: ghcr.io/path-drc/path-drc-emr-backend:${TAG:-latest}
    restart: "unless-stopped"
    depends_on:
      - db
    environment:
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
      OMRS_CONFIG_CREATE_TABLES: "true"
      OMRS_CONFIG_CONNECTION_SERVER: db
      OMRS_CONFIG_CONNECTION_DATABASE: openmrs
      OMRS_CONFIG_CONNECTION_USERNAME: ${OMRS_DB_USER:-openmrs}
      OMRS_CONFIG_CONNECTION_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs"]
      timeout: 5s
    volumes:
      - openmrs-data:/openmrs/data
      - "${OPENMRS_CONFIG_CHECKSUMS_PATH:-openmrs-config-checksums}:/openmrs/data/configuration_checksums"
      - "${OPENMRS_PERSON_IMAGES_PATH:-openmrs-person-images}:/openmrs/data/person_images"
      - "${OPENMRS_COMPLEX_OBS_PATH:-openmrs-complex-obs}:/openmrs/data/complex_obs"
      -  openmrs-activemq-data:/openmrs/data/activemq-data
    labels:
      restic-compose-backup.volumes: true
      restic-compose-backup.volumes.include: "${OPENMRS_CONFIG_CHECKSUMS_PATH:-openmrs-config-checksums},${OPENMRS_PERSON_IMAGES_PATH:-openmrs-person-images},${OPENMRS_COMPLEX_OBS_PATH:-openmrs-complex-obs},activemq-data"

  # MariaDB
  db:
    image: mariadb:10.11
    restart: "unless-stopped"
    command: "mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci"
    healthcheck:
      test: 'mysql --user=${OMRS_DB_USER:-openmrs} --password=${OMRS_DB_PASSWORD:-openmrs} --execute "SHOW DATABASES;"'
      interval: 3s
      timeout: 1s
      retries: 5
    environment:
      MYSQL_DATABASE: openmrs
      MYSQL_USER: ${OMRS_DB_USER:-openmrs}
      MYSQL_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-openmrs}
    volumes:
      - db-data:/var/lib/mysql
    labels:
      restic-compose-backup.mariadb: true

  backup:
    image: mekomsolutions/restic-compose-backup
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ${BACKUP_PATH:-./openmrs_backup}:/restic_data
      - restic-cache:/cache
    environment:
      RESTIC_REPOSITORY: ${RESTIC_REPOSITORY}
      RESTIC_PASSWORD: ${RESTIC_PASSWORD}
      RESTIC_KEEP_DAILY: ${RESTIC_KEEP_DAILY}
      RESTIC_KEEP_WEEKLY: ${RESTIC_KEEP_WEEKLY}
      RESTIC_KEEP_MONTHLY: ${RESTIC_KEEP_MONTHLY}
      RESTIC_KEEP_YEARLY: ${RESTIC_KEEP_YEARLY}
      LOG_LEVEL: ${LOG_LEVEL}
      CRON_SCHEDULE: ${CRON_SCHEDULE}

volumes:
  openmrs-data: ~
  db-data: ~
  restic-cache: ~
  openmrs-config-checksums: ~
  openmrs-person-images: ~
  openmrs-complex-obs: ~
  openmrs-activemq-data: ~
