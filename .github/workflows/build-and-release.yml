name: Build and Publish Docker Images

on:
  push:
    branches: [main]
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ github.repository_owner }}
  REPO_NAME: ${{ github.event.repository.name }}
  GATEWAY_IMAGE: gateway
  FRONTEND_IMAGE: frontend
  BACKEND_IMAGE: backend

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract short SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract RELEASE_VERSION from pom.xml
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up JDK 17 and configure Maven for GitHub Packages
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: |
              [{
                  "id": "path-drc",
                  "username": "${{ github.actor }}",
                  "password": "${{ secrets.GITHUB_TOKEN }}"
              }]

      - name: Build and push gateway image
        uses: docker/build-push-action@v6
        with:
          context: ./gateway
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-${{ env.GATEWAY_IMAGE }}:${{ steps.vars.outputs.SHORT_SHA }}
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-${{ env.GATEWAY_IMAGE }}:latest
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-${{ env.GATEWAY_IMAGE }}:${{ env.RELEASE_VERSION }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-${{ env.FRONTEND_IMAGE }}:${{ steps.vars.outputs.SHORT_SHA }}
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-${{ env.FRONTEND_IMAGE }}:latest
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-${{ env.FRONTEND_IMAGE }}:${{ env.RELEASE_VERSION }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        env:
          BUILDKIT_PROGRESS: plain
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          secret-files: |
            m2settings=/home/runner/.m2/settings.xml
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-${{ env.BACKEND_IMAGE }}:${{ steps.vars.outputs.SHORT_SHA }}
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-${{ env.BACKEND_IMAGE }}:latest
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-${{ env.BACKEND_IMAGE }}:${{ env.RELEASE_VERSION }}

      - name: Pull images
        run: |
          docker pull ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-gateway:${{ env.RELEASE_VERSION }}
          docker pull ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-frontend:${{ env.RELEASE_VERSION }}
          docker pull ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-backend:${{ env.RELEASE_VERSION }}
          docker pull mekomsolutions/restic-compose-backup:latest
          docker pull mekomsolutions/restic-compose-backup-restore

      - name: Generate docker-compose-skeleton.yaml with release version
        run: |
          sed "s|__RELEASE_VERSION__|${{ env.RELEASE_VERSION }}|g" docker-compose-skeleton.yaml.template > docker-compose-normalized.yaml

      - name: Build senzing/docker-compose-air-gapper image
        run: |
          docker build -t senzing/docker-compose-air-gapper https://github.com/senzing-garage/docker-compose-air-gapper.git#1.0.7

      - name: Generate save-images.sh with air-gapper
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/data \
            -e SENZING_DOCKER_COMPOSE_FILE=/data/docker-compose-normalized.yaml \
            -e SENZING_OUTPUT_FILE=/data/save-images.sh \
            -e SENZING_SUBCOMMAND=create-save-images \
            senzing/docker-compose-air-gapper:latest

      - name: Make save-images.sh executable
        run: chmod +x save-images.sh

      - name: Save images as tars
        run: ./save-images.sh

      - name: Package images and scripts for airgap
        run: |
          mv /home/runner/docker-compose-air-gapper-*.tgz path-drc-emr-images-bundle.tgz

      - name: Upload airgap bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: path-drc-emr-images-bundle
          path: path-drc-emr-images-bundle.tgz

      - name: Create release for tags
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
            files: |
             path-drc-emr-images-bundle.tgz
